	.file	"test.c"
	.text
	.globl	calculscal
	.type	calculscal, @function
calculscal:
.LFB2:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	movl	8(%ebp), %eax
	imull	8(%ebp), %eax
	addl	$20, %eax
	movl	%eax, -4(%ebp)
	movl	-4(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE2:
	.size	calculscal, .-calculscal
	.globl	calcularray
	.type	calcularray, @function
calcularray:
.LFB3:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	movl	$0, -4(%ebp)
	jmp	.L4
.L5:
	movl	-4(%ebp), %eax
	leal	0(,%eax,4), %edx
	movl	8(%ebp), %eax
	addl	%edx, %eax
	movl	-4(%ebp), %edx
	leal	0(,%edx,4), %ecx
	movl	8(%ebp), %edx
	addl	%ecx, %edx
	flds	(%edx)
	movl	-4(%ebp), %edx
	leal	0(,%edx,4), %ecx
	movl	12(%ebp), %edx
	addl	%ecx, %edx
	flds	(%edx)
	faddp	%st, %st(1)
	fstps	(%eax)
	addl	$1, -4(%ebp)
.L4:
	cmpl	$15, -4(%ebp)
	jle	.L5
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE3:
	.size	calcularray, .-calcularray
	.section	.rodata
.LC1:
	.string	"%d\n"
.LC2:
	.string	"%f "
	.text
	.globl	main
	.type	main, @function
main:
.LFB4:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	andl	$-16, %esp
	subl	$48, %esp
	movl	$13, 32(%esp)
	movl	$27, 36(%esp)
	movl	$64, (%esp)
	call	malloc
	movl	%eax, 40(%esp)
	movl	$64, (%esp)
	call	malloc
	movl	%eax, 44(%esp)
	movl	$0, 28(%esp)
	jmp	.L7
.L8:
	movl	28(%esp), %eax
	leal	0(,%eax,4), %edx
	movl	44(%esp), %eax
	addl	%edx, %eax
	fildl	28(%esp)
	fstps	(%eax)
	movl	28(%esp), %eax
	leal	0(,%eax,4), %edx
	movl	40(%esp), %eax
	addl	%eax, %edx
	movl	$16, %eax
	subl	28(%esp), %eax
	movl	%eax, 12(%esp)
	fildl	12(%esp)
	fstps	(%edx)
	addl	$1, 28(%esp)
.L7:
	cmpl	$15, 28(%esp)
	jle	.L8
	movl	36(%esp), %eax
	movl	%eax, 4(%esp)
	movl	32(%esp), %eax
	movl	%eax, (%esp)
	call	calculscal
	movl	%eax, 4(%esp)
	movl	$.LC1, (%esp)
	call	printf
	movl	44(%esp), %eax
	movl	%eax, 4(%esp)
	movl	40(%esp), %eax
	movl	%eax, (%esp)
	call	calcularray
	movl	$0, 28(%esp)
	jmp	.L9
.L10:
	movl	28(%esp), %eax
	leal	0(,%eax,4), %edx
	movl	40(%esp), %eax
	addl	%edx, %eax
	flds	(%eax)
	fstpl	4(%esp)
	movl	$.LC2, (%esp)
	call	printf
	addl	$1, 28(%esp)
.L9:
	cmpl	$15, 28(%esp)
	jle	.L10
	movl	$0, %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE4:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"
	.section	.note.GNU-stack,"",@progbits
